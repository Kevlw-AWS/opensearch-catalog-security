# This is a workflows based integration in which the RED's needed indices are being build as workflow steps
# The RED Method defines the three key metrics you should measure for every microservice in your architecture. Those metrics are:

# (Request) Rate - the number of requests, per second, you services are serving.
# (Request) Errors - the number of failed requests per second.
# (Request) Duration - distributions of the amount of time each request takes.

# ------------------------------------------------------------------------------------------------------------------------------------
#
# The workflow includes the following steps
#  - create a new `otel-v1-apm-spam-*` index to append the `@timestamp` mapping
# - `reindex` the `otel-v1-apm-spam-*` to the new index
# - setup rollup job to prepare the RED services metrics dimensions and metrics

# ------------------------------------------------------------------------------------------------------------------------------------
#
# This specific RED services rollup index is generated to answer the following questions:
# - average duration by service in hourly time bucket
# - max duration by service in hourly time bucket
# - success count by service by http status code in hourly time bucket
# - errors count by service by http status code in hourly time bucket
# - total requests count by service by http status code in hourly time bucket


# For Additional Information visit : https://github.com/opensearch-project/opensearch-catalog/integrations/observability/reds-services-workflow/info
# ------------------------------------------------------------------------------------------------------------------------------------

# Create a new index with the additional @timestamp field (cant sort by @timestamp,serviceName since mapping contains nested fields)

PUT  /otel-v1-apm-span-fixed
{
  "mappings": {
    "dynamic_templates": [
      {
        "resource_attributes_map": {
          "path_match": "resource.attributes.*",
          "mapping": {
            "type": "keyword"
          }
        }
      },
      {
        "span_attributes_map": {
          "path_match": "span.attributes.*",
          "mapping": {
            "type": "keyword"
          }
        }
      }
    ],
    "date_detection": false,
    "properties": {
      "droppedAttributesCount": {
        "type": "long"
      },
      "droppedEventsCount": {
        "type": "long"
      },
      "droppedLinksCount": {
        "type": "long"
      },
      "durationInNanos": {
        "type": "long"
      },
      "endTime": {
        "type": "date_nanos"
      },
      "events": {
        "type": "nested",
        "properties": {
          "attributes": {
            "properties": {
              "app@payment@transaction@id": {
                "type": "text",
                "fields": {
                  "keyword": {
                    "type": "keyword",
                    "ignore_above": 256
                  }
                }
              },
              "app@quote@cost@total": {
                "type": "float"
              },
              "app@shipping@cost@total": {
                "type": "text",
                "fields": {
                  "keyword": {
                    "type": "keyword",
                    "ignore_above": 256
                  }
                }
              },
              "app@shipping@tracking@id": {
                "type": "text",
                "fields": {
                  "keyword": {
                    "type": "keyword",
                    "ignore_above": 256
                  }
                }
              },
              "exception@escaped": {
                "type": "text",
                "fields": {
                  "keyword": {
                    "type": "keyword",
                    "ignore_above": 256
                  }
                }
              },
              "exception@message": {
                "type": "text",
                "fields": {
                  "keyword": {
                    "type": "keyword",
                    "ignore_above": 256
                  }
                }
              },
              "exception@stacktrace": {
                "type": "text",
                "fields": {
                  "keyword": {
                    "type": "keyword",
                    "ignore_above": 256
                  }
                }
              },
              "exception@type": {
                "type": "text",
                "fields": {
                  "keyword": {
                    "type": "keyword",
                    "ignore_above": 256
                  }
                }
              },
              "message@id": {
                "type": "long"
              },
              "message@type": {
                "type": "text",
                "fields": {
                  "keyword": {
                    "type": "keyword",
                    "ignore_above": 256
                  }
                }
              },
              "message@uncompressed_size": {
                "type": "long"
              }
            }
          },
          "droppedAttributesCount": {
            "type": "long"
          },
          "name": {
            "type": "text",
            "fields": {
              "keyword": {
                "type": "keyword",
                "ignore_above": 256
              }
            }
          },
          "time": {
            "type": "date_nanos"
          }
        }
      },
      "instrumentationScope": {
        "properties": {
          "name": {
            "type": "text",
            "fields": {
              "keyword": {
                "type": "keyword",
                "ignore_above": 256
              }
            }
          },
          "version": {
            "type": "text",
            "fields": {
              "keyword": {
                "type": "keyword",
                "ignore_above": 256
              }
            }
          }
        }
      },
      "kind": {
        "type": "keyword",
        "ignore_above": 128
      },
      "links": {
        "type": "nested",
        "properties": {
          "attributes": {
            "type": "object"
          },
          "droppedAttributesCount": {
            "type": "long"
          },
          "spanId": {
            "type": "text",
            "fields": {
              "keyword": {
                "type": "keyword",
                "ignore_above": 256
              }
            }
          },
          "traceId": {
            "type": "text",
            "fields": {
              "keyword": {
                "type": "keyword",
                "ignore_above": 256
              }
            }
          },
          "traceState": {
            "type": "text",
            "fields": {
              "keyword": {
                "type": "keyword",
                "ignore_above": 256
              }
            }
          }
        }
      },
      "name": {
        "type": "keyword",
        "ignore_above": 1024
      },
      "parentSpanId": {
        "type": "keyword",
        "ignore_above": 256
      },
      "resource": {
        "properties": {
          "attributes": {
            "properties": {
              "cloud@account@id": {
                "type": "keyword"
              },
              "cloud@availability_zone": {
                "type": "keyword"
              },
              "cloud@platform": {
                "type": "keyword"
              },
              "cloud@provider": {
                "type": "keyword"
              },
              "cloud@region": {
                "type": "keyword"
              },
              "container@id": {
                "type": "keyword"
              },
              "host@arch": {
                "type": "keyword"
              },
              "host@id": {
                "type": "keyword"
              },
              "host@name": {
                "type": "keyword"
              },
              "host@type": {
                "type": "keyword"
              },
              "k8s@namespace@name": {
                "type": "keyword"
              },
              "k8s@node@name": {
                "type": "keyword"
              },
              "k8s@pod@name": {
                "type": "keyword"
              },
              "os@description": {
                "type": "keyword"
              },
              "os@name": {
                "type": "keyword"
              },
              "os@type": {
                "type": "keyword"
              },
              "os@version": {
                "type": "keyword"
              },
              "process@command": {
                "type": "keyword"
              },
              "process@command_args": {
                "type": "keyword"
              },
              "process@command_line": {
                "type": "keyword"
              },
              "process@executable@name": {
                "type": "keyword"
              },
              "process@executable@path": {
                "type": "keyword"
              },
              "process@owner": {
                "type": "keyword"
              },
              "process@pid": {
                "type": "keyword"
              },
              "process@runtime@description": {
                "type": "keyword"
              },
              "process@runtime@name": {
                "type": "keyword"
              },
              "process@runtime@version": {
                "type": "keyword"
              },
              "service@instance@id": {
                "type": "keyword"
              },
              "service@name": {
                "type": "keyword"
              },
              "service@namespace": {
                "type": "keyword"
              },
              "telemetry@auto@version": {
                "type": "keyword"
              },
              "telemetry@sdk@language": {
                "type": "keyword"
              },
              "telemetry@sdk@name": {
                "type": "keyword"
              },
              "telemetry@sdk@version": {
                "type": "keyword"
              }
            }
          }
        }
      },
      "serviceName": {
        "type": "keyword"
      },
      "span": {
        "properties": {
          "attributes": {
            "properties": {
              "app@ads@ad_request_type": {
                "type": "keyword"
              },
              "app@ads@ad_response_type": {
                "type": "keyword"
              },
              "app@ads@category": {
                "type": "keyword"
              },
              "app@ads@contextKeys": {
                "type": "keyword"
              },
              "app@ads@contextKeys@count": {
                "type": "keyword"
              },
              "app@ads@count": {
                "type": "keyword"
              },
              "app@cart@items@count": {
                "type": "keyword"
              },
              "app@currency@conversion@from": {
                "type": "keyword"
              },
              "app@currency@conversion@to": {
                "type": "keyword"
              },
              "app@email@recipient": {
                "type": "keyword"
              },
              "app@featureflag@enabled": {
                "type": "keyword"
              },
              "app@featureflag@name": {
                "type": "keyword"
              },
              "app@filtered_products@count": {
                "type": "keyword"
              },
              "app@filtered_products@list": {
                "type": "keyword"
              },
              "app@order@amount": {
                "type": "keyword"
              },
              "app@order@id": {
                "type": "keyword"
              },
              "app@order@items@count": {
                "type": "keyword"
              },
              "app@payment@amount": {
                "type": "keyword"
              },
              "app@payment@card_type": {
                "type": "keyword"
              },
              "app@payment@card_valid": {
                "type": "keyword"
              },
              "app@payment@charged": {
                "type": "keyword"
              },
              "app@product@id": {
                "type": "keyword"
              },
              "app@product@name": {
                "type": "keyword"
              },
              "app@product@quantity": {
                "type": "keyword"
              },
              "app@products@count": {
                "type": "keyword"
              },
              "app@products_recommended@count": {
                "type": "keyword"
              },
              "app@quote@cost@total": {
                "type": "keyword"
              },
              "app@quote@items@count": {
                "type": "keyword"
              },
              "app@recommendation@cache_enabled": {
                "type": "keyword"
              },
              "app@shipping@amount": {
                "type": "keyword"
              },
              "app@shipping@cost@total": {
                "type": "keyword"
              },
              "app@shipping@items@count": {
                "type": "keyword"
              },
              "app@shipping@tracking@id": {
                "type": "keyword"
              },
              "app@shipping@zip_code": {
                "type": "keyword"
              },
              "app@synthetic_request": {
                "type": "keyword"
              },
              "app@user@currency": {
                "type": "keyword"
              },
              "app@user@id": {
                "type": "keyword"
              },
              "busy_ns": {
                "type": "keyword"
              },
              "code@filepath": {
                "type": "keyword"
              },
              "code@function": {
                "type": "keyword"
              },
              "code@lineno": {
                "type": "keyword"
              },
              "code@namespace": {
                "type": "keyword"
              },
              "db@instance": {
                "type": "keyword"
              },
              "db@statement": {
                "type": "keyword"
              },
              "db@type": {
                "type": "keyword"
              },
              "db@url": {
                "type": "keyword"
              },
              "decode_time_microseconds": {
                "type": "keyword"
              },
              "http@client_ip": {
                "type": "keyword"
              },
              "http@flavor": {
                "type": "keyword"
              },
              "http@host": {
                "type": "keyword"
              },
              "http@method": {
                "type": "keyword"
              },
              "http@request_content_length": {
                "type": "keyword"
              },
              "http@request_content_length_uncompressed": {
                "type": "keyword"
              },
              "http@response_content_length": {
                "type": "keyword"
              },
              "http@route": {
                "type": "keyword"
              },
              "http@scheme": {
                "type": "keyword"
              },
              "http@status_code": {
                "type": "keyword"
              },
              "http@status_text": {
                "type": "keyword"
              },
              "http@target": {
                "type": "keyword"
              },
              "http@url": {
                "type": "keyword"
              },
              "http@user_agent": {
                "type": "keyword"
              },
              "idle_ns": {
                "type": "keyword"
              },
              "idle_time_microseconds": {
                "type": "keyword"
              },
              "messaging@destination": {
                "type": "keyword"
              },
              "messaging@destination@kind": {
                "type": "keyword"
              },
              "messaging@destination@name": {
                "type": "keyword"
              },
              "messaging@destination_kind": {
                "type": "keyword"
              },
              "messaging@kafka@message@offset": {
                "type": "keyword"
              },
              "messaging@kafka@partition": {
                "type": "keyword"
              },
              "messaging@kafka@source@partition": {
                "type": "keyword"
              },
              "messaging@message@payload_size_bytes": {
                "type": "keyword"
              },
              "messaging@message_id": {
                "type": "keyword"
              },
              "messaging@message_payload_size_bytes": {
                "type": "keyword"
              },
              "messaging@operation": {
                "type": "keyword"
              },
              "messaging@system": {
                "type": "keyword"
              },
              "net@host@ip": {
                "type": "keyword"
              },
              "net@host@name": {
                "type": "keyword"
              },
              "net@host@port": {
                "type": "keyword"
              },
              "net@peer@ip": {
                "type": "keyword"
              },
              "net@peer@name": {
                "type": "keyword"
              },
              "net@peer@port": {
                "type": "keyword"
              },
              "net@sock@peer@addr": {
                "type": "keyword"
              },
              "net@sock@peer@port": {
                "type": "keyword"
              },
              "net@transport": {
                "type": "keyword"
              },
              "phoenix@action": {
                "type": "keyword"
              },
              "phoenix@plug": {
                "type": "keyword"
              },
              "query_time_microseconds": {
                "type": "keyword"
              },
              "queue_time_microseconds": {
                "type": "keyword"
              },
              "rpc@grpc@status_code": {
                "type": "keyword"
              },
              "rpc@method": {
                "type": "keyword"
              },
              "rpc@service": {
                "type": "keyword"
              },
              "rpc@system": {
                "type": "keyword"
              },
              "rpc@user_agent": {
                "type": "keyword"
              },
              "sinatra@template_name": {
                "type": "keyword"
              },
              "source": {
                "type": "keyword"
              },
              "thread@id": {
                "type": "keyword"
              },
              "thread@name": {
                "type": "keyword"
              },
              "total_time_microseconds": {
                "type": "keyword"
              }
            }
          }
        }
      },
      "spanId": {
        "type": "keyword",
        "ignore_above": 256
      },
      "startTime": {
        "type": "date_nanos"
      },
      "@timestamp": {
        "type": "date"
      },
      "status": {
        "properties": {
          "code": {
            "type": "integer"
          },
          "message": {
            "type": "keyword"
          }
        }
      },
      "traceGroup": {
        "type": "keyword",
        "ignore_above": 1024
      },
      "traceGroupFields": {
        "properties": {
          "durationInNanos": {
            "type": "long"
          },
          "endTime": {
            "type": "date_nanos"
          },
          "statusCode": {
            "type": "integer"
          }
        }
      },
      "traceId": {
        "type": "keyword",
        "ignore_above": 256
      },
      "traceState": {
        "type": "text",
        "fields": {
          "keyword": {
            "type": "keyword",
            "ignore_above": 256
          }
        }
      }
    }
  }
}

# reindex the `otel-v1-apm-span-*` otel span indices to the newly created fixed index
POST _reindex
{
  "source": {
    "index": "otel-v1-apm-span-*"
  },
  "dest": {
    "index": "otel-v1-apm-span-fixed"
  },
  "script": {
    "source": "ctx._source['@timestamp'] = ctx._source.startTime;"
  }
}

# create a rollup job for an hourly RED Services based index fast aggregation and queries 
PUT _plugins/_rollup/jobs/otel-v1-apm-span-rollup-hour
{
  "rollup": {
    "rollup_id": "rollup_REDS_services_metrics_index",
    "enabled": true,
    "schedule": {
      "interval": {
        "start_time": 1706146764865,
        "period": 1,
        "unit": "Minutes",
        "schedule_delay": 0
      }
    },
    "last_updated_time": 1706146764865,
    "enabled_time": null,
    "description": "",
    "schema_version": 19,
    "source_index": "otel-v1-apm-span-fixed",
    "target_index": "rollup_services_metrics_index",
    "metadata_id": "58NGPo0B1DvKaqdigtmw",
    "page_size": 1000,
    "delay": 0,
    "continuous": true,
    "dimensions": [
      {
        "date_histogram": {
          "fixed_interval": "1h",
          "source_field": "@timestamp",
          "target_field": "@timestamp",
          "timezone": "UTC",
          "format": null
        }
      },
      {
        "terms": {
          "source_field": "serviceName",
          "target_field": "serviceName"
        }
      },
      {
        "terms": {
          "source_field": "@timestamp",
          "target_field": "@timestamp"
        }
      },
      {
        "histogram": {
          "source_field": "status.code",
          "target_field": "status.code",
          "interval": 1
        }
      },
      {
        "terms": {
          "source_field": "span.attributes.http@status_code",
          "target_field": "span.attributes.http@status_code"
        }
      }
    ],
    "metrics": [
      {
        "source_field": "durationInNanos",
        "metrics": [
          {
            "max": {}
          },
          {
            "avg": {}
          }
        ]
      }
    ]
  }
}

# query the rollup services metrics for the amout of total requests with the aggregation of the different requests http response types
GET rollup_services_metrics_index/_search
{
  "size": 0,
  "aggs": {
    "time_buckets": {
      "date_histogram": {
        "field": "@timestamp",
        "fixed_interval": "1h"
      },
      "aggs": {
        "service_names": {
          "terms": {
            "field": "serviceName",
            "order": {
              "_count": "desc"
            }
          },
          "aggs": {
            "status_codes": {
              "terms": {
                "field": "span.attributes.http@status_code",
                "order": {
                  "_count": "desc"
                }
              }
            }
          }
        }
      }
    }
  }
}

# Get the average hourly services duration above some given threshold
GET rollup_services_metrics_index/_search
{
      "size": 0,
      "aggs": {
        "time_buckets": {
          "date_histogram": {
            "field": "@timestamp",
            "fixed_interval": "1h"
          },
          "aggs": {
            "service_names": {
              "terms": {
                "field": "serviceName",
                "order": {
                  "_count": "desc"
                }
              },
              "aggs": {
                "average_duration": {
                  "avg": {
                    "field": "durationInNanos"
                  }
                },
                "duration_filter": {
                  "bucket_selector": {
                    "buckets_path": {
                      "avgDuration": "average_duration.value"
                    },
                    "script": "params.avgDuration > ${avg_duration_threshold}"
                  }
                }
              }
            }
          }
        }
      }
    }

# Get the max hourly services duration above some given threshold
GET rollup_services_metrics_index/_search
{
      "size": 0,
      "aggs": {
        "time_buckets": {
          "date_histogram": {
            "field": "@timestamp",
            "fixed_interval": "1h"
          },
          "aggs": {
            "service_names": {
              "terms": {
                "field": "serviceName",
                "order": {
                  "_count": "desc"
                }
              },
              "aggs": {
                "max_duration": {
                  "max": {
                    "field": "durationInNanos"
                  }
                },
                "duration_filter": {
                  "bucket_selector": {
                    "buckets_path": {
                      "maxDuration": "max_duration.value"
                    },
                    "script": "params.maxDuration > ${max_duration_threshold}"
                  }
                }
              }
            }
          }
        }
      }
    }

# GET the hourly services errors count
GET rollup_services_metrics_index/_search
{
      "size": 0,
      "query": {
        "bool": {
          "filter": [
            {
              "range": {
                "status.code": {
                  "gte": 2
                }
              }
            }
          ]
        }
      },
      "aggs": {
        "time_buckets": {
          "date_histogram": {
            "field": "@timestamp",
            "fixed_interval": "1h"
          },
          "aggs": {
            "service_names": {
              "terms": {
                "field": "serviceName",
                "order": {
                  "_count": "desc"
                }
              }
            }
          }
        }
      }
    }
